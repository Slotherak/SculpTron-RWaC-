/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void textron_change1(GTextField source, GEvent event) { //_CODE_:textron:611864:
  println("textron - GTextField >> GEvent." + event + " @ " + millis());
} //_CODE_:textron:611864:

public void loginButton_click1(GButton source, GEvent event) { //_CODE_:loginButton:647860:
  println("login - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:loginButton:647860:

public void leReporter_change1(GTextField source, GEvent event) { //_CODE_:leReporter:873233:
  println("TelegramBot - GTextField >> GEvent." + event + " @ " + millis());
} //_CODE_:leReporter:873233:

public void loadButton_click1(GButton source, GEvent event) { //_CODE_:loadButton:968459:
  println("loadButton - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:loadButton:968459:

public void saveFileButton_click1(GButton source, GEvent event) { //_CODE_:saveFileButton:885075:
  println("SaveFileButton - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:saveFileButton:885075:

public void logOutButton_click1(GButton source, GEvent event) { //_CODE_:logOutButton:700780:
  println("logOutButton - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:logOutButton:700780:

public void newFileButton_click1(GButton source, GEvent event) { //_CODE_:newFileButton:201032:
  println("newFileButton - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:newFileButton:201032:

public void exportButton_click1(GButton source, GEvent event) { //_CODE_:exportButton:393181:
  println("exportButton - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:exportButton:393181:

public void undoButton_click1(GButton source, GEvent event) { //_CODE_:undoButton:279506:
  println("undoButton - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:undoButton:279506:

public void fileDisplay_change1(GTextField source, GEvent event) { //_CODE_:fileDisplay:459062:
  println("fileDisplay - GTextField >> GEvent." + event + " @ " + millis());
} //_CODE_:fileDisplay:459062:

public void MessageBoard_change1(GTextArea source, GEvent event) { //_CODE_:MessageBoard:786516:
  println("MessageBoard - GTextArea >> GEvent." + event + " @ " + millis());
} //_CODE_:MessageBoard:786516:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setCursor(ARROW);
  G4P.setDisplayFont("OCR A Extended", G4P.PLAIN, 12);
  G4P.setInputFont("OCR A Extended", G4P.PLAIN, 12);
  G4P.setSliderFont("OCR A Extended", G4P.PLAIN, 11);
  surface.setTitle("Azathoth");
  textron = new GTextField(this, 20, 280, 300, 40, G4P.SCROLLBARS_NONE);
  textron.setPromptText("Input");
  textron.setLocalColorScheme(GCScheme.SCHEME_8);
  textron.setOpaque(true);
  textron.addEventHandler(this, "textron_change1");
  ViewFinder = new GViewPeasyCam(this, 0, 0, 320, 240, 50.0);
  loginButton = new GButton(this, 400, 260, 80, 20);
  loginButton.setText("Log In");
  loginButton.setLocalColorScheme(GCScheme.PURPLE_SCHEME);
  loginButton.addEventHandler(this, "loginButton_click1");
  leReporter = new GTextField(this, 320, 280, 160, 40, G4P.SCROLLBARS_HORIZONTAL_ONLY | G4P.SCROLLBARS_AUTOHIDE);
  leReporter.setLocalColorScheme(GCScheme.SCHEME_8);
  leReporter.setOpaque(true);
  leReporter.addEventHandler(this, "leReporter_change1");
  loadButton = new GButton(this, 120, 260, 60, 20);
  loadButton.setText("LOAD");
  loadButton.setLocalColorScheme(GCScheme.GOLD_SCHEME);
  loadButton.addEventHandler(this, "loadButton_click1");
  saveFileButton = new GButton(this, 60, 260, 60, 20);
  saveFileButton.setText("SAVE");
  saveFileButton.setLocalColorScheme(GCScheme.ORANGE_SCHEME);
  saveFileButton.addEventHandler(this, "saveFileButton_click1");
  logOutButton = new GButton(this, 320, 260, 80, 20);
  logOutButton.setText("Log Out");
  logOutButton.addEventHandler(this, "logOutButton_click1");
  newFileButton = new GButton(this, 0, 260, 60, 20);
  newFileButton.setText("NEW");
  newFileButton.setLocalColorScheme(GCScheme.RED_SCHEME);
  newFileButton.addEventHandler(this, "newFileButton_click1");
  exportButton = new GButton(this, 260, 260, 60, 20);
  exportButton.setText("EXPORT");
  exportButton.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  exportButton.addEventHandler(this, "exportButton_click1");
  undoButton = new GButton(this, 180, 260, 80, 20);
  undoButton.setText("UNDO");
  undoButton.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  undoButton.addEventHandler(this, "undoButton_click1");
  HackerFlairDetail = new GLabel(this, 0, 280, 20, 40);
  HackerFlairDetail.setTextAlign(GAlign.RIGHT, GAlign.TOP);
  HackerFlairDetail.setText(">:");
  HackerFlairDetail.setLocalColorScheme(GCScheme.SCHEME_8);
  HackerFlairDetail.setOpaque(true);
  fileDisplay = new GTextField(this, 0, 240, 320, 20, G4P.SCROLLBARS_NONE);
  fileDisplay.setLocalColorScheme(GCScheme.SCHEME_8);
  fileDisplay.setOpaque(true);
  fileDisplay.addEventHandler(this, "fileDisplay_change1");
  MessageBoard = new GTextArea(this, 320, 0, 160, 260, G4P.SCROLLBARS_VERTICAL_ONLY);
  MessageBoard.setText("W.I.P.");
  MessageBoard.setLocalColorScheme(GCScheme.PURPLE_SCHEME);
  MessageBoard.setOpaque(true);
  MessageBoard.addEventHandler(this, "MessageBoard_change1");
}

// Variable declarations 
// autogenerated do not edit
GTextField textron; 
GViewPeasyCam ViewFinder; 
GButton loginButton; 
GTextField leReporter; 
GButton loadButton; 
GButton saveFileButton; 
GButton logOutButton; 
GButton newFileButton; 
GButton exportButton; 
GButton undoButton; 
GLabel HackerFlairDetail; 
GTextField fileDisplay; 
GTextArea MessageBoard; 
